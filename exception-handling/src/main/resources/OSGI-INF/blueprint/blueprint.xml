<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<!-- <camelContext xmlns="http://camel.apache.org/schema/blueprint"> <route 
		id="timerToLog"> <from uri="timer:foo?period=5000"/> <setBody> <method ref="helloBean" 
		method="hello"/> </setBody> <log message="The message contains ${body}"/> 
		<to uri="mock:result"/> </route> </camelContext> -->

<bean id="errorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
    <property name="deadLetterUri" value="mock:error"/>
</bean>

	<bean id="bookService"
		class="com.redhat.camel.blueprint.exception.handling.BookService" />
	<bean id="msgService"
		class="com.redhat.camel.blueprint.exception.handling.MsgService" />

	<camelContext errorHandlerRef="errorHandler" xmlns="http://camel.apache.org/schema/blueprint">

		<route id="bookserviceRoute">
			<from uri="jetty:http://localhost:8181/bookService" />

			<process ref="bookService" />

			<onException>
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<handled>
					<constant>true</constant>
				</handled>
				<log message="${exception}" />
				<to uri="file:/home/alele/_tech/testData/output" />
				<to uri="mock:error" />
			</onException>
		</route>

		<route id="msgserviceRoute">
			<from uri="jetty:http://localhost:8181/msgService" />
			<doTry>
				<process ref="msgService" />
				<to uri="mock:result" />
				<doCatch>
					<!-- catch multiple exceptions -->
					<exception>java.lang.Exception</exception>
					<onWhen>
						<simple>${exception.message} contains 'custom'</simple>
					</onWhen>
					<to uri="mock:catch" />
					<to uri="file:/home/alele/_tech/testData/output" />
				</doCatch>
				<doFinally>
					<to uri="mock:finally" />
				</doFinally>
			</doTry>
		</route>

	</camelContext>
</blueprint>
